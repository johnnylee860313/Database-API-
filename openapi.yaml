openapi: 3.0.0
servers:
  - url: "/api"
info:
  description: "This is the Document of Database System Final Project."
  version: 1.0.0
  title: Database System Final Project
tags:
  - name: User
    description: Operations about user.
  - name: Product
    description: Operations about product.
  - name: Order
    description: Operations about order.
  - name: Image
    description: Operations about image.
paths:
  /users:
    post:
      tags:
        - User
      summary: Create user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                type:
                  type: string
                  enum:
                    - 買家
                    - 賣家
                phone:
                  type: string
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
  /users/{id}:
    patch:
      tags:
        - User
      summary: Update the user.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
  /users/signIn:
    post:
      tags:
        - User
      summary: User Sign In
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Auth"
  /users/me:
    get:
      tags:
        - User
      summary: Get self data.
      security:
        - bearerAuth: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
  /products:
    post:
      tags:
        - Product
      summary: Create product.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                picture:
                  type: string
                inventory:
                  type: integer
                price:
                  type: integer
                startSaleTime:
                  type: string
                  format: date
                endSaleTime:
                  type: string
                  format: date
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Product"
    get:
      tags:
        - Product
      summary: Get all products.
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Product"
  /products/{id}:
    get:
      tags:
        - Product
      summary: Get the product.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                          $ref: "#/components/schemas/Product"
    patch:
      tags:
        - Product
      summary: Update the product.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                picture:
                  type: string
                inventory:
                  type: integer
                startSaleTime:
                  type: string
                  format: date
                endSaleTime:
                  type: string
                  format: date
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Product"
    delete:
      tags:
        - Product
      summary: Delete the product.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        type: string
  /orders:
    post:
      tags:
        - Order
      summary: Create order.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: integer
                  amount:
                    type: integer
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Order"
    get:
      tags:
        - Order
      summary: Get all orders.
      security:
        - bearerAuth: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
  /orders/{id}:
    get:
      tags:
        - Order
      summary: Get the order.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                          $ref: "#/components/schemas/Order"
  /images:
    post:
      tags:
        - Image
      summary: Upload an image.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ApiResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
components:
  schemas:
    Auth:
      type: object
      properties:
        id:
          type: integer
        token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
            - 買家
            - 賣家
        email:
          type: string
        phone:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        picture:
          type: string
        inventory:
          type: integer
        price:
          type: integer
        startSaleTime:
          type: string
          format: date
        endSaleTime:
          type: string
          format: date
    Order:
      type: object
      properties:
        id:
          type: integer
        buyerName:
          type: string
        buyerEmail:
          type: string
        buyerPhone:
          type: string
        timestamp:
          type: string
          format: date
        products:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              picture:
                type: string
              price:
                type: integer
              amount:
                type: integer
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
